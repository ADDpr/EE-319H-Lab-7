


ARM Macro Assembler    Page 1 


    1 00000000         ; LCD.s
    2 00000000         ; Student names: Alex Koo, Anthony Do
    3 00000000         ; Last modification date: change this to the last modifi
                       cation date or look very silly
    4 00000000         
    5 00000000         ; Runs on TM4C123
    6 00000000         ; Use I2C3 to send data to SSD1306 128 by 64 pixel oLED
    7 00000000         
    8 00000000         ; As part of Lab 7, students need to implement I2C_Send2
                       
    9 00000000         
   10 00000000                 EXPORT           I2C_Send2
   11 00000000                 PRESERVE8
   12 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   13 00000000                 THUMB
   14 00000000                 ALIGN
   15 00000000         
   16 00000000 40023000 
                       I2C3_MSA_R
                               EQU              0x40023000
   17 00000000 40023004 
                       I2C3_MCS_R
                               EQU              0x40023004
   18 00000000 40023008 
                       I2C3_MDR_R
                               EQU              0x40023008
   19 00000000         ; sends two bytes to specified slave
   20 00000000         ; Input: R0  7-bit slave address
   21 00000000         ;        R1  first 8-bit data to be written.
   22 00000000         ;        R2  second 8-bit data to be written.
   23 00000000         ; Output: 0 if successful, nonzero (error code) if error
                       
   24 00000000         
   25 00000000         ; Assumes: I2C3 and port D have already been initialized
                        and enabled
   26 00000000         I2C_Send2
   27 00000000         ;; --UUU-- 
   28 00000000         ; 1) wait while I2C is busy, wait for I2C3_MCS_R bit 0 t
                       o be 0
   29 00000000 B418            PUSH             {R3,R4}
   30 00000002         I2C_LABEL1
   31 00000002 4B28            LDR              R3,=I2C3_MCS_R
   32 00000004 681C            LDR              R4, [R3]
   33 00000006 F004 0401       AND              R4,R4,#0x01
   34 0000000A 2C01            CMP              R4, #0x01
   35 0000000C D0F9            BEQ              I2C_LABEL1
   36 0000000E         ; 2) write slave address to I2C3_MSA_R, 
   37 0000000E         ;     MSA bits7-1 is slave address
   38 0000000E         ;     MSA bit 0 is 0 for send data
   39 0000000E EA4F 0040       LSL              R0, #1
   40 00000012 F000 00FE       AND              R0, R0, #0xFE
   41 00000016 4B24            LDR              R3,=I2C3_MSA_R
   42 00000018 6018            STR              R0, [R3]
   43 0000001A         ; 3) write first data to I2C3_MDR_R
   44 0000001A 4B24            LDR              R3,=I2C3_MDR_R
   45 0000001C 6019            STR              R1,[R3]
   46 0000001E         ; 4) write 0x03 to I2C3_MCS_R,  send no stop, generate s
                       tart, enable



ARM Macro Assembler    Page 2 


   47 0000001E         ; add 4 NOPs to wait for I2C to start transmitting
   48 0000001E F04F 0303       MOV              R3, #0x03
   49 00000022 4C20            LDR              R4,=I2C3_MCS_R
   50 00000024 6023            STR              R3,[R4]
   51 00000026 BF00            NOP
   52 00000028 BF00            NOP
   53 0000002A BF00            NOP
   54 0000002C BF00            NOP
   55 0000002E         I2C_LABEL2
   56 0000002E 4B1D            LDR              R3,=I2C3_MCS_R
   57 00000030 681C            LDR              R4, [R3]
   58 00000032 F004 0401       AND              R4,R4,#0x01
   59 00000036 2C01            CMP              R4, #0x01
   60 00000038 D0F9            BEQ              I2C_LABEL2
   61 0000003A         ; 6) check for errors, if any bits 3,2,1 I2C3_MCS_R is h
                       igh 
   62 0000003A 4B1A            LDR              R3,=I2C3_MCS_R
   63 0000003C 681C            LDR              R4, [R3]
   64 0000003E EA4F 0444       LSL              R4, #1
   65 00000042 F004 0407       AND              R4, R4, #0x07
   66 00000046 2C00            CMP              R4, #0x00
   67 00000048 D008            BEQ              I2C_NO_ERROR
   68 0000004A         
   69 0000004A         ;    b) if error return R0 equal to bits 3,2,1 of I2C3_M
                       CS_R, error bits
   70 0000004A F000 0000       AND              R0, R0, #0x00
   71 0000004E EA40 0004       ORR              R0,R4
   72 00000052         ;    a) if error set I2C3_MCS_R to 0x04 to send stop 
   73 00000052 4B14            LDR              R3,=I2C3_MCS_R
   74 00000054 F04F 0404       MOV              R4, #0x04
   75 00000058 601C            STR              R4, [R3]
   76 0000005A E021            B                I2C_END_FUNCTION
   77 0000005C         
   78 0000005C         I2C_NO_ERROR
   79 0000005C         ; 7) write second data to I2C3_MDR_R
   80 0000005C 4B13            LDR              R3,=I2C3_MDR_R
   81 0000005E 601A            STR              R2,[R3]
   82 00000060         ; 8) write 0x05 to I2C3_MCS_R, send stop, no start, enab
                       le
   83 00000060         ; add 4 NOPs to wait for I2C to start transmitting
   84 00000060 F04F 0305       MOV              R3, #0x05
   85 00000064 4C0F            LDR              R4,=I2C3_MCS_R
   86 00000066 6023            STR              R3,[R4]
   87 00000068 BF00            NOP
   88 0000006A BF00            NOP
   89 0000006C BF00            NOP
   90 0000006E BF00            NOP
   91 00000070         
   92 00000070         ; 9) wait while I2C is busy, wait for I2C3_MCS_R bit 0 t
                       o be 0
   93 00000070         I2C_LABEL3
   94 00000070 4B0C            LDR              R3,=I2C3_MCS_R
   95 00000072 681C            LDR              R4, [R3]
   96 00000074 F004 0401       AND              R4,R4,#0x01
   97 00000078 2C01            CMP              R4, #0x01
   98 0000007A D0F9            BEQ              I2C_LABEL3
   99 0000007C         ; 10) return R0 equal to bits 3,2,1 of I2C3_MCS_R, error
                        bits
  100 0000007C         ;     will be 0 is no error



ARM Macro Assembler    Page 3 


  101 0000007C 681C            LDR              R4, [R3]
  102 0000007E EA4F 0444       LSL              R4, #1
  103 00000082 F003 0307       AND              R3, R3, #0x07
  104 00000086 2C00            CMP              R4, #0x00
  105 00000088 D008            BEQ              I2C_NO_ERROR_2
  106 0000008A         
  107 0000008A F000 0000       AND              R0, R0, #0x00
  108 0000008E EA40 0004       ORR              R0,R4
  109 00000092         
  110 00000092 4B04            LDR              R3,=I2C3_MCS_R
  111 00000094 F04F 0404       MOV              R4, #0x04
  112 00000098 601C            STR              R4,[R3]
  113 0000009A E001            B                I2C_END_FUNCTION
  114 0000009C         
  115 0000009C         I2C_NO_ERROR_2
  116 0000009C F04F 0000       MOV              R0, #0x00
  117 000000A0         
  118 000000A0         I2C_END_FUNCTION
  119 000000A0 BC18            POP{R3,R4}
  120 000000A2         
  121 000000A2         
  122 000000A2 4770            BX               LR          ;   return
  123 000000A4         
  124 000000A4         
  125 000000A4                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  126 000000A4                 END                          ; end of file
              40023004 
              40023000 
              40023008 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4 --apcs=interw
ork --depend=.\lcd.d -o.\lcd.o -I.\RTE\_Lab7 -IC:\Users\adois\AppData\Local\Arm
\Packs\ARM\CMSIS\5.7.0\CMSIS\Core\Include -IC:\Users\adois\AppData\Local\Arm\Pa
cks\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 --predefine="__EVAL SETA 1" --pr
edefine="__MICROLIB SETA 1" --predefine="__UVISION_VERSION SETA 533" --predefin
e="_RTE_ SETA 1" --predefine="TM4C123GH6PM SETA 1" --predefine="_RTE_ SETA 1" -
-list=.\lcd.lst LCD.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 12 in file LCD.s
   Uses
      None
Comment: .text unused
I2C_END_FUNCTION 000000A0

Symbol: I2C_END_FUNCTION
   Definitions
      At line 118 in file LCD.s
   Uses
      At line 76 in file LCD.s
      At line 113 in file LCD.s

I2C_LABEL1 00000002

Symbol: I2C_LABEL1
   Definitions
      At line 30 in file LCD.s
   Uses
      At line 35 in file LCD.s
Comment: I2C_LABEL1 used once
I2C_LABEL2 0000002E

Symbol: I2C_LABEL2
   Definitions
      At line 55 in file LCD.s
   Uses
      At line 60 in file LCD.s
Comment: I2C_LABEL2 used once
I2C_LABEL3 00000070

Symbol: I2C_LABEL3
   Definitions
      At line 93 in file LCD.s
   Uses
      At line 98 in file LCD.s
Comment: I2C_LABEL3 used once
I2C_NO_ERROR 0000005C

Symbol: I2C_NO_ERROR
   Definitions
      At line 78 in file LCD.s
   Uses
      At line 67 in file LCD.s
Comment: I2C_NO_ERROR used once
I2C_NO_ERROR_2 0000009C

Symbol: I2C_NO_ERROR_2
   Definitions
      At line 115 in file LCD.s
   Uses
      At line 105 in file LCD.s
Comment: I2C_NO_ERROR_2 used once
I2C_Send2 00000000




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: I2C_Send2
   Definitions
      At line 26 in file LCD.s
   Uses
      At line 10 in file LCD.s
Comment: I2C_Send2 used once
8 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

I2C3_MCS_R 40023004

Symbol: I2C3_MCS_R
   Definitions
      At line 17 in file LCD.s
   Uses
      At line 31 in file LCD.s
      At line 49 in file LCD.s
      At line 56 in file LCD.s
      At line 62 in file LCD.s
      At line 73 in file LCD.s
      At line 85 in file LCD.s
      At line 94 in file LCD.s
      At line 110 in file LCD.s

I2C3_MDR_R 40023008

Symbol: I2C3_MDR_R
   Definitions
      At line 18 in file LCD.s
   Uses
      At line 44 in file LCD.s
      At line 80 in file LCD.s

I2C3_MSA_R 40023000

Symbol: I2C3_MSA_R
   Definitions
      At line 16 in file LCD.s
   Uses
      At line 41 in file LCD.s
Comment: I2C3_MSA_R used once
3 symbols
348 symbols in table
